[1mdiff --git a/sweep.py b/sweep.py[m
[1mindex 7f671cf..39110a1 100644[m
[1m--- a/sweep.py[m
[1m+++ b/sweep.py[m
[36m@@ -17,11 +17,12 @@[m [mFALSE = 0[m
 PRINTFOO = 1[m
 PRINTDIAG = 1[m
 [m
[31m-ONSTATES = (1,2,3, 4)[m
[32m+[m[32mONSTATES = (1,3, 4, 5)[m
 VARNAMES = 1[m
 LISTS = 2[m
 ALL = 3[m
 TEST1 = 4[m
[32m+[m[32mLINES = 5[m
 [m
 ##def nCk(n,k):[m
 ##    if n == 0 or k == 0:[m
[36m@@ -32,7 +33,10 @@[m [mTEST1 = 4[m
 ##    else:[m
 ##        return factorial(n)/(factorial(k)*factorial(n-k))[m
 [m
[31m-[m
[32m+[m[32mdef print3(onstate, *args):[m
[32m+[m[32m    if onstate in ONSTATES:[m
[32m+[m[32m        for arg in args:[m
[32m+[m[32m            print arg[m
 [m
 def print2(s, variables, onstate):[m
     if onstate in ONSTATES:[m
[36m@@ -42,26 +46,24 @@[m [mdef print2(s, variables, onstate):[m
             print "~"+s+"~"[m
         print variables[m
         print "\n"[m
[31m-    else:[m
[31m-        print "no"[m
 [m
 [m
[31m-def place_bombs(columns, rows, num_bombs):[m
[32m+[m[32mdef place_bombs(rows, columns, num_bombs):[m
     if PRINTFOO: print "\n ---in place_bombs---"[m
[31m-    bomb_columns = [][m
     bomb_rows = [][m
[31m-    bomb_placement = random.sample(range(columns*rows), num_bombs)[m
[32m+[m[32m    bomb_columns = [][m
[32m+[m[32m    bomb_placement = random.sample(range(rows*columns), num_bombs)[m
     print2("bomb_placement", bomb_placement, LISTS)[m
 [m
     for item in bomb_placement:[m
[31m-        bomb_columns.append(item%columns)[m
[31m-        bomb_rows.append(item/columns)[m
[32m+[m[32m        bomb_rows.append(item%rows)[m
[32m+[m[32m        bomb_columns.append(item/rows)[m
 [m
 ##    for r in range(num_bombs):[m
[31m-##        bomb_columns.append(random.randrange(columns))[m
 ##        bomb_rows.append(random.randrange(rows))[m
[31m-    print2 ("*",("bomb_columns" , bomb_columns, "bomb_rows", bomb_rows), VARNAMES)[m
[31m-    return bomb_columns, bomb_rows[m
[32m+[m[32m##        bomb_columns.append(random.randrange(columns))[m
[32m+[m[32m    print2 ("*",("bomb_rows" , bomb_rows, "bomb_columns", bomb_columns), VARNAMES)[m
[32m+[m[32m    return bomb_rows, bomb_columns[m
 [m
 [m
 def get_local(test_coord):[m
[36m@@ -92,17 +94,17 @@[m [mdef count_bombs(test_coord, bombs):[m
             print2 ("bomb location:", bomb, 2)[m
     return count[m
 [m
[31m-def make_grid((columns, rows), num_bombs):[m
[31m-    if PRINTFOO: print "in make_grid. num columns, rows, bombs:", columns, rows, num_bombs[m
[31m-##    grid = [range(rows) for i in range(columns)][m
[31m-    grid = [[{"bomb":FALSE, "clicked":FALSE} for r in range(rows)] for c in range(columns)][m
[31m-##    for column in range(columns):[m
[31m-##        for row in range(rows):[m
[32m+[m[32mdef make_grid((rows, columns), num_bombs):[m
[32m+[m[32m    if PRINTFOO: print "in make_grid. num rows, columns, bombs:", rows, columns, num_bombs[m
[32m+[m[32m##    grid = [range(columns) for i in range(rows)][m
[32m+[m[32m    grid = [[{"bomb":FALSE, "clicked":FALSE} for r in range(columns)] for c in range(rows)][m
[32m+[m[32m##    for column in range(rows):[m
[32m+[m[32m##        for row in range(columns):[m
 ##            grid[row, column] = {"bomb":0, "clicked":0}[m
 [m
     grid[0][1]['bomb'] = "yarp"[m
 [m
[31m-    bomb_locs = place_bombs(columns, rows, num_bombs)[m
[32m+[m[32m    bomb_locs = place_bombs(rows, columns, num_bombs)[m
     bomb_coords = zip(bomb_locs[0], bomb_locs[1])[m
 [m
 [m
[36m@@ -116,11 +118,27 @@[m [mdef make_grid((columns, rows), num_bombs):[m
     return grid[m
 [m
 def print_grid(grid):[m
[31m-    for item in grid:[m
[31m-        print item[m
[31m-[m
[31m-[m
[31m-[m
[32m+[m[32m    string_list = [""][m
[32m+[m[32m    for idx, val in enumerate(grid):[m
[32m+[m[32m        string_list[0]+=str(idx)[m
[32m+[m[32m        print "stringlist[0]", string_list[0][m
[32m+[m[32m        print idx[m
[32m+[m[32m    for row in grid:[m
[32m+[m[32m        print2("",row, LISTS)[m
[32m+[m[32m        tempstring = ""[m
[32m+[m[32m        for column in row:[m
[32m+[m[32m            tempstring+="]["[m
[32m+[m[32m        string_list.append("["+tempstring+"]")[m
[32m+[m
[32m+[m[32m        for idx, val in enumerate(row):[m
[32m+[m[32m               print "column number", idx, val[m
[32m+[m
[32m+[m[32m        print3(LINES, ".........")[m
[32m+[m
[32m+[m[32m    print [a for a, b in enumerate(grid)][m
[32m+[m
[32m+[m[32m    for string in string_list:[m
[32m+[m[32m        print "string" , string[m
 [m
 def main():[m
 [m
